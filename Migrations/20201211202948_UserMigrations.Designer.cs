// <auto-generated />
using System;
using GestionParcInformatique.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionParcInformatique.Migrations
{
    [DbContext(typeof(GParcInfoContext))]
    [Migration("20201211202948_UserMigrations")]
    partial class UserMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("GestionParcInformatique.Models.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long?>("AnneExpiration")
                        .HasColumnType("INTEGER(4)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateReception")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdCategorie")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdCouleur")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdEtat")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdMarque")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdModeConsommation")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdModelArticle")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdTypeArticle")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdUniteMesure")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumKit")
                        .HasColumnType("INTEGER");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumRef")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumSerie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT(100)");

                    b.Property<long?>("PrixUnitaire")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("QteGlobaleEntre")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("QteSeuil")
                        .HasColumnType("INTEGER(4)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategorie");

                    b.HasIndex("IdCouleur");

                    b.HasIndex("IdEtat");

                    b.HasIndex("IdMarque");

                    b.HasIndex("IdModeConsommation");

                    b.HasIndex("IdModelArticle");

                    b.HasIndex("IdOwner");

                    b.HasIndex("IdTypeArticle");

                    b.HasIndex("IdUniteMesure");

                    b.HasIndex(new[] { "Id", "NumSerie", "NumRef", "NumOrdre" }, "IX_Article_Id_NumSerie_NumRef_NumOrdre")
                        .IsUnique();

                    b.ToTable("Article");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Categorie", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.HasIndex(new[] { "Id", "NumOrdre", "DesignationFr" }, "IX_Categorie_Id_NumOrdre_DesignationFr")
                        .IsUnique();

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Couleur", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.HasIndex(new[] { "Id", "NumOrdre", "DesignationFr" }, "IX_Couleur_Id_NumOrdre_DesignationFr")
                        .IsUnique();

                    b.ToTable("Couleur");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Document", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDocument")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateValidation")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdMagasin")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdOldService")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdPersonneSigne")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdPersonneUse")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdServiceDest")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdServiceOwner")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdTypeDocument")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdTypeMouvement")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT");

                    b.Property<string>("RefDocument")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdMagasin");

                    b.HasIndex("IdOldService");

                    b.HasIndex("IdOwner");

                    b.HasIndex("IdPersonneSigne");

                    b.HasIndex("IdPersonneUse");

                    b.HasIndex("IdServiceDest");

                    b.HasIndex("IdServiceOwner");

                    b.HasIndex("IdTypeDocument");

                    b.HasIndex("IdTypeMouvement");

                    b.HasIndex(new[] { "Id", "RefDocument", "NumOrdre" }, "IX_Document_Id_RefDocument_NumOrdre")
                        .IsUnique();

                    b.ToTable("Document");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Etat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.HasIndex(new[] { "Id", "NumOrdre", "DesignationFr" }, "IX_Etat_Id_NumOrdre_DesignationFr")
                        .IsUnique();

                    b.ToTable("Etat");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Magasin", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.HasIndex(new[] { "Id", "NumOrdre", "DesignationFr" }, "IX_Magasin_Id_NumOrdre_DesignationFr")
                        .IsUnique();

                    b.ToTable("Magasin");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Marque", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.HasIndex(new[] { "Id", "NumOrdre", "DesignationFr" }, "IX_Marque_Id_NumOrdre_DesignationFr")
                        .IsUnique();

                    b.ToTable("Marque");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.ModeConsommation", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.HasIndex(new[] { "Id", "NumOrdre", "DesignationFr" }, "IX_ModeConsommation_Id_NumOrdre_DesignationFr")
                        .IsUnique();

                    b.ToTable("ModeConsommation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.ModelArticle", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.HasIndex(new[] { "Id", "NumOrdre", "DesignationFr" }, "IX_ModelArticle_Id_NumOrdre_DesignationFr")
                        .IsUnique();

                    b.ToTable("ModelArticle");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.OperationArticle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdArticle")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdDocument")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT");

                    b.Property<long?>("QteDemande")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("QteDistribue")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("QteEntre")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("QteRestante")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("QteSupp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdArticle");

                    b.HasIndex("IdDocument");

                    b.HasIndex("IdOwner");

                    b.ToTable("OperationArticle");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Personne", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long?>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdService")
                        .HasColumnType("TEXT");

                    b.Property<string>("Matricule")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prenom")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Taille")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.HasIndex("IdService");

                    b.HasIndex(new[] { "Id", "Matricule", "NumOrdre" }, "IX_Personne_Id_Matricule_NumOrdre")
                        .IsUnique();

                    b.ToTable("Personne");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Service", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Abreviation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IdServiceParent")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.HasIndex("IdServiceParent");

                    b.HasIndex(new[] { "Id", "NumOrdre", "DesignationFr", "Abreviation" }, "IX_Service_Id_NumOrdre_DesignationFr_Abreviation")
                        .IsUnique();

                    b.ToTable("Service");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.TypeArticle", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.HasIndex(new[] { "Id", "NumOrdre", "DesignationFr" }, "IX_TypeArticle_Id_NumOrdre_DesignationFr")
                        .IsUnique();

                    b.ToTable("TypeArticle");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.TypeDocument", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.HasIndex(new[] { "Id", "NumOrdre", "DesignationFr" }, "IX_TypeDocument_Id_NumOrdre_DesignationFr")
                        .IsUnique();

                    b.ToTable("TypeDocument");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.TypeMouvement", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.HasIndex(new[] { "Id", "NumOrdre", "DesignationFr" }, "IX_TypeMouvement_Id_NumOrdre_DesignationFr")
                        .IsUnique();

                    b.ToTable("TypeMouvement");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.UniteMesure", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DesignationFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumOrdre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.HasIndex(new[] { "Id", "NumOrdre", "DesignationFr" }, "IX_UniteMesure_Id_NumOrdre_DesignationFr")
                        .IsUnique();

                    b.ToTable("UniteMesure");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Utilisateur", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("IdPersonne")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdPersonne");

                    b.ToTable("Utilisateur");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Article", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Categorie", "IdCategorieNavigation")
                        .WithMany("Articles")
                        .HasForeignKey("IdCategorie");

                    b.HasOne("GestionParcInformatique.Models.Couleur", "IdCouleurNavigation")
                        .WithMany("Articles")
                        .HasForeignKey("IdCouleur");

                    b.HasOne("GestionParcInformatique.Models.Etat", "IdEtatNavigation")
                        .WithMany("Articles")
                        .HasForeignKey("IdEtat");

                    b.HasOne("GestionParcInformatique.Models.Marque", "IdMarqueNavigation")
                        .WithMany("Articles")
                        .HasForeignKey("IdMarque");

                    b.HasOne("GestionParcInformatique.Models.ModeConsommation", "IdModeConsommationNavigation")
                        .WithMany("Articles")
                        .HasForeignKey("IdModeConsommation");

                    b.HasOne("GestionParcInformatique.Models.ModelArticle", "IdModelArticleNavigation")
                        .WithMany("Articles")
                        .HasForeignKey("IdModelArticle");

                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("Articles")
                        .HasForeignKey("IdOwner");

                    b.HasOne("GestionParcInformatique.Models.TypeArticle", "IdTypeArticleNavigation")
                        .WithMany("Articles")
                        .HasForeignKey("IdTypeArticle");

                    b.HasOne("GestionParcInformatique.Models.UniteMesure", "IdUniteMesureNavigation")
                        .WithMany("Articles")
                        .HasForeignKey("IdUniteMesure");

                    b.Navigation("IdCategorieNavigation");

                    b.Navigation("IdCouleurNavigation");

                    b.Navigation("IdEtatNavigation");

                    b.Navigation("IdMarqueNavigation");

                    b.Navigation("IdModeConsommationNavigation");

                    b.Navigation("IdModelArticleNavigation");

                    b.Navigation("IdOwnerNavigation");

                    b.Navigation("IdTypeArticleNavigation");

                    b.Navigation("IdUniteMesureNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Categorie", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("Categories")
                        .HasForeignKey("IdOwner");

                    b.Navigation("IdOwnerNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Couleur", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("Couleurs")
                        .HasForeignKey("IdOwner");

                    b.Navigation("IdOwnerNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Document", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Magasin", "IdMagasinNavigation")
                        .WithMany("Documents")
                        .HasForeignKey("IdMagasin");

                    b.HasOne("GestionParcInformatique.Models.Service", "IdOldServiceNavigation")
                        .WithMany("DocumentIdOldServiceNavigations")
                        .HasForeignKey("IdOldService");

                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("Documents")
                        .HasForeignKey("IdOwner");

                    b.HasOne("GestionParcInformatique.Models.Personne", "IdPersonneSigneNavigation")
                        .WithMany("DocumentIdPersonneSigneNavigations")
                        .HasForeignKey("IdPersonneSigne");

                    b.HasOne("GestionParcInformatique.Models.Personne", "IdPersonneUseNavigation")
                        .WithMany("DocumentIdPersonneUseNavigations")
                        .HasForeignKey("IdPersonneUse");

                    b.HasOne("GestionParcInformatique.Models.Service", "IdServiceDestNavigation")
                        .WithMany("DocumentIdServiceDestNavigations")
                        .HasForeignKey("IdServiceDest");

                    b.HasOne("GestionParcInformatique.Models.Service", "IdServiceOwnerNavigation")
                        .WithMany("DocumentIdServiceOwnerNavigations")
                        .HasForeignKey("IdServiceOwner");

                    b.HasOne("GestionParcInformatique.Models.TypeDocument", "IdTypeDocumentNavigation")
                        .WithMany("Documents")
                        .HasForeignKey("IdTypeDocument");

                    b.HasOne("GestionParcInformatique.Models.TypeMouvement", "IdTypeMouvementNavigation")
                        .WithMany("Documents")
                        .HasForeignKey("IdTypeMouvement");

                    b.Navigation("IdMagasinNavigation");

                    b.Navigation("IdOldServiceNavigation");

                    b.Navigation("IdOwnerNavigation");

                    b.Navigation("IdPersonneSigneNavigation");

                    b.Navigation("IdPersonneUseNavigation");

                    b.Navigation("IdServiceDestNavigation");

                    b.Navigation("IdServiceOwnerNavigation");

                    b.Navigation("IdTypeDocumentNavigation");

                    b.Navigation("IdTypeMouvementNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Etat", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("Etats")
                        .HasForeignKey("IdOwner");

                    b.Navigation("IdOwnerNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Magasin", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("Magasins")
                        .HasForeignKey("IdOwner");

                    b.Navigation("IdOwnerNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Marque", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("Marques")
                        .HasForeignKey("IdOwner");

                    b.Navigation("IdOwnerNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.ModeConsommation", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("ModeConsommations")
                        .HasForeignKey("IdOwner");

                    b.Navigation("IdOwnerNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.ModelArticle", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("ModelArticles")
                        .HasForeignKey("IdOwner");

                    b.Navigation("IdOwnerNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.OperationArticle", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Article", "IdArticleNavigation")
                        .WithMany("OperationArticles")
                        .HasForeignKey("IdArticle");

                    b.HasOne("GestionParcInformatique.Models.Document", "IdDocumentNavigation")
                        .WithMany("OperationArticles")
                        .HasForeignKey("IdDocument");

                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("OperationArticles")
                        .HasForeignKey("IdOwner");

                    b.Navigation("IdArticleNavigation");

                    b.Navigation("IdDocumentNavigation");

                    b.Navigation("IdOwnerNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Personne", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("Personnes")
                        .HasForeignKey("IdOwner");

                    b.HasOne("GestionParcInformatique.Models.Service", "IdServiceNavigation")
                        .WithMany("Personnes")
                        .HasForeignKey("IdService");

                    b.Navigation("IdOwnerNavigation");

                    b.Navigation("IdServiceNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Service", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("Services")
                        .HasForeignKey("IdOwner");

                    b.HasOne("GestionParcInformatique.Models.Service", "IdServiceParentNavigation")
                        .WithMany("InverseIdServiceParentNavigation")
                        .HasForeignKey("IdServiceParent");

                    b.Navigation("IdOwnerNavigation");

                    b.Navigation("IdServiceParentNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.TypeArticle", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("TypeArticles")
                        .HasForeignKey("IdOwner");

                    b.Navigation("IdOwnerNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.TypeDocument", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("TypeDocuments")
                        .HasForeignKey("IdOwner");

                    b.Navigation("IdOwnerNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.TypeMouvement", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("TypeMouvements")
                        .HasForeignKey("IdOwner");

                    b.Navigation("IdOwnerNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.UniteMesure", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Utilisateur", "IdOwnerNavigation")
                        .WithMany("UniteMesures")
                        .HasForeignKey("IdOwner");

                    b.Navigation("IdOwnerNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Utilisateur", b =>
                {
                    b.HasOne("GestionParcInformatique.Models.Personne", "IdPersonneNavigation")
                        .WithMany("Utilisateurs")
                        .HasForeignKey("IdPersonne");

                    b.Navigation("IdPersonneNavigation");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Article", b =>
                {
                    b.Navigation("OperationArticles");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Categorie", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Couleur", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Document", b =>
                {
                    b.Navigation("OperationArticles");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Etat", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Magasin", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Marque", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.ModeConsommation", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.ModelArticle", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Personne", b =>
                {
                    b.Navigation("DocumentIdPersonneSigneNavigations");

                    b.Navigation("DocumentIdPersonneUseNavigations");

                    b.Navigation("Utilisateurs");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Service", b =>
                {
                    b.Navigation("DocumentIdOldServiceNavigations");

                    b.Navigation("DocumentIdServiceDestNavigations");

                    b.Navigation("DocumentIdServiceOwnerNavigations");

                    b.Navigation("InverseIdServiceParentNavigation");

                    b.Navigation("Personnes");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.TypeArticle", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.TypeDocument", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.TypeMouvement", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.UniteMesure", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("GestionParcInformatique.Models.Utilisateur", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Categories");

                    b.Navigation("Couleurs");

                    b.Navigation("Documents");

                    b.Navigation("Etats");

                    b.Navigation("Magasins");

                    b.Navigation("Marques");

                    b.Navigation("ModeConsommations");

                    b.Navigation("ModelArticles");

                    b.Navigation("OperationArticles");

                    b.Navigation("Personnes");

                    b.Navigation("Services");

                    b.Navigation("TypeArticles");

                    b.Navigation("TypeDocuments");

                    b.Navigation("TypeMouvements");

                    b.Navigation("UniteMesures");
                });
#pragma warning restore 612, 618
        }
    }
}
